{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,QACzBC,QACEC,EAFuB,EAEvBA,KACAC,EAHuB,EAGvBA,MACAC,EAJuB,EAIvBA,KAJuB,OAOzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCrBMG,G,MAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OAAwB,IAApBA,EAASC,OAET,mBAAG,UAAQ,oBAAX,6BAKF,qBAAKJ,UAAU,cAAf,SACGG,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQU,WCZVC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBV,EAAgBU,EAAhBV,MAAOD,EAASW,EAATX,KAEf,OACE,8BACG,eAED,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCNIY,G,MAAW,SAAC,GAAD,QACtBC,KACEC,EAFoB,EAEpBA,MACAH,EAHoB,EAGpBA,KACAT,EAJoB,EAIpBA,KACAI,EALoB,EAKpBA,SALoB,OAQtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IACjC,cAAC,EAAD,CAAUH,KAAMA,OAGlB,mBAAGR,UAAU,iBAAb,SACGD,IAGH,uBACA,cAAC,EAAD,CAAaI,SAAUA,SCrBdS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKJ,UCSX,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAVmBO,EAUDL,EAAKK,OAThBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIO,IAAWP,EAAKF,OAAO,MAU3DH,UAPyBe,EAOGR,EAAKJ,GAN1Ba,EAAmBC,QAAO,SAAAxB,GAAO,OAAIsB,IAAWtB,EAAQsB,aADjE,IAA2BA,EAJNH,KAaRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,YAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCnBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0ad5e27.chunk.js","sourcesContent":["export const CommentInfo = ({\n  comment: {\n    name,\n    email,\n    body,\n  },\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => {\n  if (comments.length === 0) {\n    return (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    );\n  }\n\n  return (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo\n          key={comment.id}\n          comment={comment}\n        />\n      ))}\n    </div>\n  );\n};\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <p>\n      {' Posted by  '}\n\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({\n  post: {\n    title,\n    user,\n    body,\n    comments,\n  },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n      <UserInfo user={user} />\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n    <CommentList comments={comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        post={post}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => userId === user.id) || null;\n}\n\nfunction getCommentsByPost(postId) {\n  return commentsFromServer.filter(comment => postId === comment.postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPost(post.id),\n}));\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App_title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}